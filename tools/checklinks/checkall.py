'''
improvement in relative path
	for example, suppose the current dir is path1 and
	the addr used in html link is 'to/somewhere', then,
	the actual absolute path should be path1+'/to/somewhere'
	
2015.11.05
'''
# generated by pygen.py
# python pygen.py pytemplate

import crawlib as lib
import urllib2
import copy
import time
import socket

import sys
reload(sys)
sys.setdefaultencoding('utf8')

baseurl = "http://www.sable.mcgill.ca/"
basekey = "sable.mcgill.ca/mclab"
headurl = "http://"
heedurl2= "https://"
sleeptm = 0.5 #seconds

def main():
	starturl = 'http://www.sable.mcgill.ca/mclab/'
	all = getAllLinks(starturl)
	print all
	return
	
def getAllLinks(url):
	group = []; newgroup = []
	if testURL(url) == 0: return []
	else: newgroup.append(url)
	while len(newgroup) > 0:
		workgroup = []
		for nu in newgroup:
			html = lib.getHtml(nu);
			link = fetchLinks(html, 'href="')
			print 'searching in:  ',nu
			for lk in link:
				if (headurl in lk) or (heedurl2 in lk):
					nexturl = lk
				elif len(lk) > 0:
					if lk[0] == '/': nexturl = baseurl + lk[1:]
					else: nexturl = nu[:nu.rfind('/')] + '/' + lk  #special url
				else: continue
				if ('css/' in nexturl) or ('/js/' in nexturl) or ('googleapis' in nexturl):
					continue
				# print '    ',nexturl,' '
				if testURL(nexturl) == 0: print '    ',nexturl,' ** Not Found **'; continue
				#else: print '-- Found --'
				if (basekey in nexturl) and (not nexturl in group) and (not nexturl in workgroup):
					workgroup.append(nexturl)
		newgroup = copy.copy(workgroup)
		group = group + newgroup

def testURL(url):
	time.sleep(sleeptm)
	try: response = urllib2.urlopen(url)
	except urllib2.HTTPError as e:
		return 0 #need return?
	except urllib2.URLError:
		return 0
	except socket.error:
		return 0
	except httplib.BadStatusLine:
		return 0
	response.close()
	return 1
	
def fetchLinks(html, key):
	off = 0; res = []; ks = len(key)
	while True:
		sta = html.find(key,off)
		if sta < 0: break
		off = sta + ks
		end = html.find('"',off)
		res.append(html[(sta+ks):end])
	return res
	
if __name__ == "__main__":
	t0 = time.time()
	main()
	print('execution time is %f s' % (time.time()-t0))